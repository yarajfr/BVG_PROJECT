import { Directive, ElementRef, Renderer2, Optional } from "@angular/core";
import { NgModel, NgControl } from "@angular/forms";

@Directive({
    selector: "input,select,textarea",
})
export class FormInputStatus {
    constructor(
        private element: ElementRef,
        private renderer2: Renderer2,
    ) { }
    private parentElement: HTMLElement;

    getParent(path) {
        if (!this.parentElement) {
            path.some(item => {
                if (item.nodeName) {
                    let node = item.nodeName.toLocaleLowerCase()
                    if (node == "label") {
                        this.parentElement = item;
                        return true;
                    }
                }
            })
            return this.parentElement;
        } else {
            return this.parentElement;
        }
    }

    error() {
        if (this.parentElement) {
            this.renderer2.addClass(this.parentElement, "invalid")
            this.renderer2.removeClass(this.parentElement, "valid")
        }
        this.renderer2.addClass(this.element.nativeElement, "invalid")
        this.renderer2.removeClass(this.element.nativeElement, "valid")
    }

    success() {
        if (this.parentElement) {
            this.renderer2.addClass(this.parentElement, "valid")
            this.renderer2.removeClass(this.parentElement, "invalid")
        }
        this.renderer2.addClass(this.element.nativeElement, "valid")
        this.renderer2.removeClass(this.element.nativeElement, "invalid")
    }

    // @HostListener("focus", ["$event"]) focus(e) {
    //     let parent = this.getParent(e.path);
    //     if (parent) {
    //         this.renderer2.addClass(this.parentElement, "focus");
    //     }
    //     this.renderer2.addClass(this.element.nativeElement, "focus");
    // }
    // @HostListener("blur", ["$event"]) blur(e) {
    //     let parent = this.getParent(e.path);
    //     if (parent) {
    //         this.renderer2.removeClass(this.parentElement, "focus");
    //     }
    //     this.renderer2.removeClass(this.element.nativeElement, "focus");
    //     if (this.ngControl || this.ngModel) {
    //         let control = this.ngControl || this.ngModel;
    //         if (control.invalid) {
    //             this.error();
    //         } else {
    //             this.success();
    //         }
    //     }
    // }
}