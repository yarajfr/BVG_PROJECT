import { Component } from "@angular/core";
import { ContentChildren } from "@angular/core";
import { TabContentDirective } from "./tab-content/tab-content";
import { TabSwitchDirective } from "./tab-switch/tab-switch";
import { QueryList } from "@angular/core";


@Component({
	templateUrl: "./tabs.html",
	selector: "tabs",
})
export class TabsComponent {
	/**标签内容实例 */
	_tabContents: QueryList<TabContentDirective>
	@ContentChildren(TabContentDirective) set tabContents(list) {
		this._tabContents = list;
		if (this._tabSwitchs) {
			setTimeout(() => this.setInstance());
		}
	};
	get tabContents() {
		return this._tabContents;
	}
	/**标签切换组件 */
	_tabSwitchs: QueryList<TabSwitchDirective>
	@ContentChildren(TabSwitchDirective) set tabSwitchs(list) {
		this._tabSwitchs = list;
		if (this._tabContents) {
			setTimeout(() => this.setInstance());
		}
	};
	get tabSwitchs() {
		return this._tabSwitchs;
	}

	constructor(
	) { }

	/**关闭所有内容区域 */
	closeAllContent() {
		let contents = this.tabContents.toArray();
		contents.map(content => {
			content.close();
		})
		let switchs = this.tabSwitchs.toArray();
		switchs.map(item => {
			item.checked = false;
			item.renderer.removeClass(item.elementRef.nativeElement, "active");
		})
	}

	/**对实例content组件和switch组件进行设置修改 */
	setInstance() {
		let contents = {};
		this.tabContents.toArray().map((item, index) => {
			contents[item.name || index] = item;
		})
		let switchs = this.tabSwitchs.toArray();
		switchs.map((item, index) => {
			item.beforeClick = () => {
				this.closeAllContent();
			}
			item.content = contents[item.name] || contents[index];
			if (item.content) {
				item.content.onclose = () => {
					item.leave.emit();
				}
				item.content.onopen = (isFirst: boolean) => {
					item.enter.emit(isFirst);
				}
			}
		})
		this.findDefaultTab();
	}

	/**获取默认需要打开 */
	findDefaultTab() {
		let switchs = this.tabSwitchs.toArray();
		if (!switchs.some(item => {
			if (item.checked) {
				item.onclick();
				return true;
			}
		})) {
			let switchItem = switchs[0];
			switchItem.onclick();
		}
	}

	checkedIndex() {
		let switchs = this.tabSwitchs.toArray();
		let index = 0;
		switchs.some((item, i) => {
			if (item.checked) {
				index = i;
				return true;
			}
		})
		return index;
	}

	selectedByIndex(index) {
		let switchs = this.tabSwitchs.toArray();
		let switchItem = switchs[index];
		switchItem.onclick();
	}

	ngOnInit() {
	}
}