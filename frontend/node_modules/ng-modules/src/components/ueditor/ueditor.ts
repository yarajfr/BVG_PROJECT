import { Component, ViewChild, Input, ElementRef, forwardRef } from '@angular/core';
import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';

@Component({
	selector: 'ueditor',
	templateUrl: "./ueditor.html",
	styleUrls: ["./ueditor.scss"],
	providers: [
		{
			provide: NG_VALUE_ACCESSOR,
			useExisting: forwardRef(() => UEditorComponent),
			multi: true
		}
	]
})
export class UEditorComponent implements ControlValueAccessor {
	@ViewChild("editor") editor: ElementRef;
	@Input("config") config: any;

	_defaultContent;
	writeValue(obj: any): void {
		this._defaultContent = obj;
		if (this.ue && this.ueReady) {
			setTimeout(() => {
				if (this.isInit) {
					return;
				}
				this.isInit = true;
				this.ue.setContent(obj)
			}, 200);
		}
	}
	_registerOnChange = (data: any) => { };
	registerOnChange(fn: any): void {
		this._registerOnChange = fn;
	}
	registerOnTouched(fn: any): void {
	}
	setDisabledState?(isDisabled: boolean): void {
	}
	constructor() { }

	isInit: boolean = false;
	ueReady: boolean = false;
	ue: any;
	ngOnInit() {
		if (!(<any>window).UE) {
			return console.error("请先引入ueditor,详情请联系 ikrong.com")
		}
		for (let key in (<any>window).UE.instants) {
			(<any>window).UE.instants[key].destroy();
			delete (<any>window).UE.instants[key];
		}
		(<any>window).UE.delEditor(this.editor.nativeElement);
		this.ue = (<any>window).UE.getEditor(this.editor.nativeElement, Object.assign({
			toolbars: [["paragraph", "fontfamily", "fontsize", "|", 'forecolor', 'backcolor', 'bold', 'italic', 'underline', 'strikethrough', "lineheight", 'superscript', 'subscript', "|", "indent", "justifyleft", "justifycenter", "justifyright", "justifyjustify", "|", "link", "unlink", "|", 'removeformat', 'formatmatch', 'autotypeset', 'blockquote', 'pasteplain', "|", "insertorderedlist", "insertunorderedlist", "rowspacingtop", "rowspacingbottom", "directionalityltr", "directionalityrtl", "touppercase", "pagebreak", "spechars", "|", "simpleupload", "imagenone", "imageleft", "imageright", "imagecenter", "|", "selectall", "cleardoc", "source", "fullscreen"]],
			autoHeightEnabled: false,
		}, this.config));
		this.ue.ready(() => {
			//设置编辑器的内容
			// ue.setContent('hello');
			//获取html内容，返回: <p>hello</p>
			// var html = ue.getContent();
			//获取纯文本内容，返回: hello
			// var txt = ue.getContentTxt();
			// $(this.editor.nativeElement).find(".edui-toolbar").find(".edui-default [title]").map(function () {
			// 	$(this).attr("data-toggle", "tooltip");
			// 	$(this).tooltip()
			// })
			let height = this.editor.nativeElement.offsetParent.clientHeight - this.editor.nativeElement.querySelector(".edui-editor-toolbarbox").clientHeight;
			this.ue.setHeight(height < 0 ? 400 : height)
			this.ueReady = true;
			setTimeout(() => {
				if (this.isInit) {
					return;
				}
				this.isInit = true;
				this.ue.setContent(this._defaultContent || "");
			}, 200);
			this.ue.on("contentChange", () => {
				this._registerOnChange(this.ue.getContent())
			})
		});
	}

	getContent() {
		let data = this.ue.getContent();
		this._registerOnChange(data);
		return data;
	}

}
