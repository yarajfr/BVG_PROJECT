import { Injectable } from '@angular/core';
import { ModalComponent, AlertComponent, AlertOptions, ConfirmOptions, ConfirmComponent, LoadingComponent, ToastOptions, ToastComponent, InfoConfirmComponent, InfoConfirmOptions, ModalOptions } from '../../components';
import { UtilProvider } from '../util/util';
import { I18nProvider } from '../i18n/i18n';

@Injectable()
export class ModalProvider {

    constructor(
        private util: UtilProvider,
        private i18n: I18nProvider,
    ) { }

    alert(options: AlertOptions | string) {
        return this.modal(AlertComponent, options, this.util.extend({
            title: this.i18n.get("__8"),
            width: 500,
            height: 315,
        }, options, true));
    }

    confirm(options: ConfirmOptions | string) {
        return this.modal(ConfirmComponent, options, this.util.extend({
            title: this.i18n.get("__8"),
            width: 500,
            height: 315,
        }, options, true))
    }

    inforConfirm(options: InfoConfirmOptions | string) {
        if (typeof options == "string") {
            options = {
                content: options,
            }
        }
        options.css = options.css || "content-left";
        return this.modal(InfoConfirmComponent, options, this.util.extend({
            width: 500,
            height: 200,
        }, options, true))
    }

    loading(content: string, options?: ModalOptions) {
        return this.modal(LoadingComponent, {
            content: content,
        }, this.util.extend({
            width: content ? 160 : 110,
            height: content ? 160 : 110,
        }, options, true));
    }

    modal(component: any, data?: any, options?: ModalOptions) {
        // console.log(arguments);
        return ModalComponent.Instance.create(component, data, options);
    }

    toast(content: string | ToastOptions) {
        if (typeof content == "string") {
            content = { content: content, };
        }
        ToastComponent.Instance.create(content);
    }

}