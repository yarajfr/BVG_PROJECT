var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Injectable } from "@angular/core";
var UtilProvider = (function () {
    function UtilProvider() {
    }
    UtilProvider.prototype.extend = function () {
        var items = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            items[_i] = arguments[_i];
        }
        var full = false;
        var b = items.splice(items.length - 1, 1)[0];
        if (typeof b == "boolean") {
            full = b;
            b = items.splice(items.length - 1, 1)[0];
        }
        var a = items.splice(items.length - 1, 1)[0];
        if (!a && b) {
            return b;
        }
        if (typeof a == typeof b && typeof a == "object") {
            for (var key in full ? b : a) {
                if (typeof a[key] == typeof b[key] && typeof a[key] == "object") {
                    a[key] = this.extend(a[key], b[key]);
                }
                else {
                    if (typeof b[key] != 'undefined') {
                        a[key] = b[key];
                    }
                }
            }
            items.push(a);
            items.push(full);
            return this.extend.apply(this, items);
        }
        else {
            return a;
        }
    };
    UtilProvider = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [])
    ], UtilProvider);
    return UtilProvider;
}());
export { UtilProvider };
//# sourceMappingURL=util.js.map