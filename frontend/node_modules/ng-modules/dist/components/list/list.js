var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, ElementRef, Output, EventEmitter, ViewChild, ChangeDetectorRef, ContentChild, TemplateRef, ContentChildren, Directive, QueryList } from '@angular/core';
import { Treetable } from './treetable/treetable';
var ListCellComponent = (function () {
    function ListCellComponent() {
        this.colspan = new EventEmitter;
        this.rowspan = new EventEmitter;
    }
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ListCellComponent.prototype, "name", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ListCellComponent.prototype, "prop", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ListCellComponent.prototype, "useTemplate", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ListCellComponent.prototype, "headerTemplate", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ListCellComponent.prototype, "width", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ListCellComponent.prototype, "css", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ListCellComponent.prototype, "invisiable", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], ListCellComponent.prototype, "colspan", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], ListCellComponent.prototype, "rowspan", void 0);
    __decorate([
        ContentChild(TemplateRef),
        __metadata("design:type", TemplateRef)
    ], ListCellComponent.prototype, "template", void 0);
    ListCellComponent = __decorate([
        Directive({
            selector: "list-cell",
        })
    ], ListCellComponent);
    return ListCellComponent;
}());
export { ListCellComponent };
var ListComponent = (function () {
    function ListComponent(cdr) {
        this.cdr = cdr;
        this.treetableInstance = new Treetable;
        this._treetable = false;
        this.manual = false;
        this.innerTemplates = {
            datetime: {},
            treetableTmp: {},
        };
        this.templates = {};
        this.tableWidth = 0;
        this._pageSize = 10;
        this.pageIndex = 1;
        this.pageTotalIndex = 40;
        this.onpage = new EventEmitter();
        this.loaded = false;
        this.tdDatas = {};
    }
    ListComponent.prototype.expandTree = function (item) {
        if (this._treetable) {
            this.treetableInstance.expand(item);
        }
    };
    ListComponent.prototype.compressTree = function (item) {
        if (this.treetable && item.$$expand) {
            this.treetableInstance.compress(item);
        }
    };
    Object.defineProperty(ListComponent.prototype, "treetable", {
        get: function () {
            return this._treetable;
        },
        set: function (isTreetable) {
            if (typeof isTreetable == "string") {
                this._treetable = true;
            }
            else {
                this._treetable = isTreetable;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListComponent.prototype, "datetime", {
        set: function (template) {
            this.innerTemplates.datetime = template;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListComponent.prototype, "treetableTmp", {
        set: function (template) {
            this.innerTemplates.treetableTmp = template;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListComponent.prototype, "cellTemplates", {
        get: function () {
            return this._cellTemplates;
        },
        set: function (templates) {
            var _this = this;
            this._cellTemplates = templates;
            var headers = [];
            templates.map(function (item) {
                if (typeof item.useTemplate == "string") {
                    item.useTemplate = _this.innerTemplates[item.useTemplate];
                }
                if (!item.useTemplate) {
                    if (item.template) {
                        item.useTemplate = item.template;
                    }
                }
                headers.push(item);
            });
            if (this.treetable) {
                headers.unshift({
                    useTemplate: this.innerTemplates.treetableTmp,
                    width: 40,
                    css: "text-left",
                });
            }
            if (headers.length) {
                this.headers = headers;
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(ListComponent.prototype, "totalSize", {
        get: function () {
            return this._totalSize;
        },
        set: function (totalSize) {
            this._totalSize = totalSize;
            this.pageTotalIndex = Math.ceil(totalSize / (this.pageSize || 1));
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(ListComponent.prototype, "pageSize", {
        get: function () {
            return this._pageSize;
        },
        set: function (pageSize) {
            this._pageSize = pageSize;
            this.pageTotalIndex = Math.ceil((this.totalSize || 0) / this.pageSize);
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(ListComponent.prototype, "headers", {
        get: function () {
            return this._headers;
        },
        set: function (values) {
            var _this = this;
            if (!values) {
                return;
            }
            if (typeof values == "string") {
                var valuesArr = values.split(",");
                var headers = valuesArr.map(function (item) {
                    return {
                        name: item,
                        prop: item,
                    };
                });
                this._headers = headers;
            }
            else {
                values.map(function (item) {
                    if (typeof item.useTemplate == "string") {
                        item.useTemplate = _this.innerTemplates[item.useTemplate];
                    }
                    item.oriWidth = item.width;
                });
                var _values_1 = [];
                values.map(function (item) {
                    if (item.invisiable) {
                        return;
                    }
                    _values_1.push(item);
                });
                this._headers = _values_1;
            }
            this.calcHeaders(this._headers);
        },
        enumerable: true,
        configurable: true
    });
    ;
    ListComponent.prototype.calcHeaders = function (headers) {
        if (this.flat || !headers) {
            return;
        }
        var totalWidth = this.container.nativeElement.clientWidth - headers.length - 10;
        var expectWidth = 0;
        headers.map(function (item) {
            item.width = parseFloat(item.oriWidth) || 0;
            expectWidth += item.width;
        });
        var tableWidth = 0;
        if (expectWidth < totalWidth) {
            headers.map(function (item) {
                item.width = (parseInt((item.width / expectWidth) * 10000) / 10000 * totalWidth) || (totalWidth / headers.length);
                tableWidth += item.width;
            });
        }
        this.tableWidth = tableWidth || expectWidth;
    };
    ListComponent.prototype.recalHeader = function () {
        var _this = this;
        this.cdr.detectChanges();
        setTimeout(function () {
            _this.cellTemplates = _this.listCellTep;
        }, 1);
    };
    ListComponent.prototype.refresh = function () {
        this.toPage(this.pageIndex);
    };
    ListComponent.prototype.toPage = function (pageIndex) {
        var _this = this;
        if (this.loadingStatus) {
            return;
        }
        var load = false;
        this.loadingStatus = true;
        pageIndex = parseInt(pageIndex);
        pageIndex - this.pageTotalIndex >= 0 && (pageIndex = this.pageTotalIndex);
        pageIndex <= 0 && (pageIndex = 1);
        var data = {};
        data.isFirst = this.list ? false : true;
        data.pageSize = this.pageSize;
        data.pageIndex = pageIndex;
        data.complete = function (e) {
            if (!load) {
                _this.loadingStatus = false;
                _this.complete(e);
            }
        };
        data.cancel = function () {
            load = true;
            _this.loadingStatus = false;
            _this.loaded = true;
        };
        this.pageIndex = pageIndex;
        this.inputPageIndex = pageIndex;
        this.onpage.emit(data);
    };
    ListComponent.prototype.complete = function (e) {
        this.loaded = true;
        this.tdDatas = {};
        if (this.pageIndex > 1) {
            if (e.list.length == 0) {
                return this.toPage(this.pageIndex - 1);
            }
        }
        this.totalSize = e.totalSize;
        if (this.treetable) {
            this.treetableInstance.calcDeep(e.list);
        }
        this.list = e.list;
        this.cdr.detectChanges();
    };
    ListComponent.prototype.inputPageKeyUp = function (e) {
        if (e.keyCode == 13) {
            this.inputPageIndex = this.inputPageIndex || 1;
            var index = (+this.inputPageIndex);
            if (index == this.inputPageIndex) {
                this.toPage(this.inputPageIndex);
            }
            else {
                this.inputPageIndex = this.pageIndex;
            }
        }
    };
    ListComponent.prototype.ngOnInit = function () {
        var _this = this;
        window.addEventListener("resize", this.resizeFn = function () {
            _this.calcHeaders(_this._headers);
        });
        if (!this.manual) {
            this.toPage(1);
        }
    };
    ListComponent.prototype.ngAfterContentInit = function () {
        this.recalHeader();
    };
    ListComponent.prototype.ngOnDestroy = function () {
        window.removeEventListener("resize", this.resizeFn);
    };
    ListComponent.prototype.tdKey = function (rowIndex, colIndex) {
        return this.pageIndex + "_" + rowIndex + "_" + colIndex;
    };
    ListComponent.prototype.getTdData = function (rowIndex, colIndex) {
        var _this = this;
        var colInfo = this.headers[colIndex];
        var preRowInfo = this.headers[colIndex - 1];
        var nextRowInfo = this.headers[colIndex + 1];
        var key = this.pageIndex + "_" + rowIndex + "_" + colIndex;
        if (this.tdDatas[key]) {
            return this.tdDatas[key];
        }
        else {
            this.tdDatas[key] = {
                rowIndex: rowIndex,
                colIndex: colIndex,
                list: this.list,
                headers: this.headers,
                pre: this.list[rowIndex - 1],
                current: this.list[rowIndex],
                next: this.list[rowIndex + 1],
                prop: colInfo.prop,
                preProp: preRowInfo ? preRowInfo.prop : undefined,
                nextProp: nextRowInfo ? nextRowInfo.prop : undefined,
                hideRow: function () {
                    _this.tdDatas[key].rowspan = -1;
                },
                hideCol: function () {
                    _this.tdDatas[key].colspan = -1;
                },
                setRowspan: function (i) {
                    _this.tdDatas[key].rowspan = i;
                },
                setColspan: function (i) {
                    _this.tdDatas[key].colspan = i;
                },
            };
            return this.tdDatas[key];
        }
    };
    ListComponent.prototype.setCalcRowspan = function (fn) {
        var _this = this;
        this.calcRowspan = function (rowi, coli, ele) {
            var tdData = _this.getTdData(rowi, coli);
            fn(tdData, ele);
            return tdData.rowspan || 1;
        };
    };
    ListComponent.prototype.setCalcColspan = function (fn) {
        var _this = this;
        this.calcColspan = function (rowi, coli, ele) {
            var tdData = _this.getTdData(rowi, coli);
            fn(_this.getTdData(rowi, coli), ele);
            return tdData.colspan || 1;
        };
    };
    ListComponent.prototype.sameRowCombine = function (e, ele) {
        var prop = e.prop;
        if ((!e.pre) || (e.pre[prop] != e.current[prop])) {
            var rowspan = 1;
            while (e.list[e.rowIndex + rowspan] && (e.current[prop] == e.list[e.rowIndex + rowspan][prop])) {
                rowspan++;
            }
            e.setRowspan(rowspan);
        }
        else if (e.pre[prop] == e.current[prop]) {
            ele.style.display = "none";
            e.hideRow();
        }
        else {
            e.setRowspan(1);
        }
    };
    ListComponent.prototype.copyRowCombine = function (e, ele, target) {
        var firstColKey = this.pageIndex + "_" + e.rowIndex + "_" + target;
        e.setRowspan(this.tdDatas[firstColKey].rowspan);
        if (this.tdDatas[firstColKey].rowspan == -1) {
            ele.style.display = "none";
        }
    };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListComponent.prototype, "treetable", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ListComponent.prototype, "manual", void 0);
    __decorate([
        ViewChild("datetime"),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListComponent.prototype, "datetime", null);
    __decorate([
        ViewChild("treetableTmp"),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListComponent.prototype, "treetableTmp", null);
    __decorate([
        ContentChildren(TemplateRef),
        __metadata("design:type", Object)
    ], ListComponent.prototype, "contentTemplates", void 0);
    __decorate([
        ContentChildren(ListCellComponent),
        __metadata("design:type", QueryList)
    ], ListComponent.prototype, "listCellTep", void 0);
    __decorate([
        ContentChildren(ListCellComponent),
        __metadata("design:type", QueryList),
        __metadata("design:paramtypes", [QueryList])
    ], ListComponent.prototype, "cellTemplates", null);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ListComponent.prototype, "flat", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ListComponent.prototype, "templates", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ListComponent.prototype, "list", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListComponent.prototype, "totalSize", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListComponent.prototype, "pageSize", null);
    __decorate([
        ViewChild("container"),
        __metadata("design:type", ElementRef)
    ], ListComponent.prototype, "container", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListComponent.prototype, "headers", null);
    __decorate([
        Output("onpage"),
        __metadata("design:type", Object)
    ], ListComponent.prototype, "onpage", void 0);
    ListComponent = __decorate([
        Component({
            selector: "list",
            template: "<!-- \u5217\u8868 --> <div class=\"table-container show-scrollbar\" [class.hide]=\"flat\"> <div #container> <table [ngStyle]=\"{width:(tableWidth+'px')}\" *ngIf=\"!flat\"> <colgroup [width]=\"tableWidth\"> <col *ngFor=\"let item of headers\" [width]=\"item.width\"> </colgroup> <thead> <tr> <th *ngFor=\"let item of headers\"> <div *ngIf=\"!item.headerTemplate\">{{item.name}}</div> <div *ngIf=\"item.headerTemplate\"> <ng-container *ngTemplateOutlet=\"item.headerTemplate;context: {$implicit: item, header:item, prop:item.prop};\"> </ng-container> </div> </th> </tr> </thead> <tbody> <tr *ngFor=\"let row of list;let index=index;\"> <td *ngFor=\"let item of headers;let n=index;\" #td [class]=\"item.css\" [attr.rowspan]=\"calcRowspan&&calcRowspan(index,n,td)\"  [attr.colspan]=\"calcColspan&&calcColspan(index,n,td)\" [ngStyle]=\"{ 'max-width':item.width+'px' }\"> <div *ngIf=\"!item.useTemplate&&!templates[item.prop]\" [title]=\"row[item.prop]||''\">{{row[item.prop]||''}} </div> <div *ngIf=\"item.useTemplate||templates[item.prop]\"> <ng-container *ngTemplateOutlet=\"item.useTemplate||templates[item.prop]; context: { $implicit: row,  row: row, value:row[item.prop], index:index, prop:item.prop, tdData:getTdData(index,n) };\"> </ng-container> </div> </td> </tr> <tr class=\"empty-list\" *ngIf=\"list?.length==0&&loaded\"> <td [attr.colspan]=\"headers?.length\"> <svg viewBox=\"0 0 1567 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <path d=\"M156.662278 699.758173h21.097186A10.444152 10.444152 0 0 1 187.994733 710.202325c0 5.765172-4.490985 10.444152-10.235269 10.444152H156.662278v21.097186A10.444152 10.444152 0 0 1 146.218126 751.978932a10.277045 10.277045 0 0 1-10.444152-10.235269V720.646477H114.676787A10.444152 10.444152 0 0 1 104.441518 710.202325c0-5.765172 4.490985-10.444152 10.235269-10.444152H135.773974v-21.097187A10.444152 10.444152 0 0 1 146.218126 668.425717c5.765172 0 10.444152 4.490985 10.444152 10.235269v21.097187z m1378.628042-83.553215v-21.097186A10.277045 10.277045 0 0 0 1524.846168 584.872503a10.444152 10.444152 0 0 0-10.444152 10.235269v21.097186h-21.097186a10.277045 10.277045 0 0 0-10.235269 10.444152c0 5.598065 4.595427 10.444152 10.235269 10.444152h21.097186v21.097187c0 5.744284 4.67898 10.235269 10.444152 10.235268a10.444152 10.444152 0 0 0 10.444152-10.235268V637.093262h21.097187c5.744284 0 10.235269-4.67898 10.235268-10.444152a10.444152 10.444152 0 0 0-10.235268-10.444152H1535.29032zM776.460024 960.861969H250.596979A20.80475 20.80475 0 0 1 229.77134 939.973665c0-11.530344 9.462402-20.888304 20.825639-20.888303h94.728457A83.010119 83.010119 0 0 1 334.212859 877.413196v-605.96969A83.49055 83.49055 0 0 1 417.849627 187.994733H480.430984V167.001988A83.49055 83.49055 0 0 1 564.067752 83.553215h501.152182A83.448773 83.448773 0 0 1 1148.856702 167.001988v605.969689c0 15.185797-4.052331 29.410732-11.133466 41.672166h115.554096c11.551232 0 20.909192 9.274407 20.909192 20.888304 0 11.530344-9.295295 20.888304-20.888304 20.888304H1002.638576v20.992745c0 15.185797-4.052331 29.410732-11.133466 41.672166h11.196131c11.488567 0 20.825639 9.274407 20.825639 20.888303 0 11.530344-9.462402 20.888304-20.825639 20.888304h-109.893365c9.545955 16.000441 7.478013 36.972297-6.41271 50.863019a41.672166 41.672166 0 0 1-59.072122 0L776.460024 960.861969z m76.367638-41.776607h66.424806c22.977134 0 41.609501-18.59059 41.609501-41.881049V270.461756c0-22.559368-18.047494-40.690416-40.314426-40.690416H416.303892c-22.266932 0-40.314426 18.214601-40.314426 40.690416v606.742557c0 23.123352 18.799473 41.881049 41.588613 41.881049h317.084449l-10.736588-10.757477a41.693054 41.693054 0 0 1-10.861918-40.377091l-19.718558-19.739447A146.259902 146.259902 0 0 1 502.363703 627.693525a146.218126 146.218126 0 0 1 220.517822 190.981761l19.739447 19.739447a41.630389 41.630389 0 0 1 40.377091 10.841029L852.827662 919.085362zM1002.638576 814.643843h62.852906A41.797496 41.797496 0 0 0 1107.080095 772.867236V167.106429c0-23.14424-18.632367-41.776607-41.588613-41.776607H563.775316A41.797496 41.797496 0 0 0 522.207592 167.106429v20.888304h396.794216A83.448773 83.448773 0 0 1 1002.638576 271.443506V814.643843zM266.325872 46.998683h31.123572c8.773088 0 15.875111 6.955805 15.875111 15.666228 0 8.647758-7.102023 15.666228-15.875111 15.666228h-31.123572v31.123572c0 8.773088-6.955805 15.875111-15.666228 15.875111a15.770669 15.770669 0 0 1-15.666228-15.875111V78.331139H203.869844A15.728893 15.728893 0 0 1 187.994733 62.664911c0-8.647758 7.102023-15.666228 15.875111-15.666228h31.123572V15.875111c0-8.773088 6.955805-15.875111 15.666228-15.875111 8.647758 0 15.666228 7.102023 15.666228 15.875111v31.123572zM20.888304 939.973665c0-11.530344 9.462402-20.888304 20.825638-20.888303h125.455152c11.488567 0 20.825639 9.274407 20.825639 20.888303 0 11.530344-9.462402 20.888304-20.825639 20.888304H41.713942A20.80475 20.80475 0 0 1 20.888304 939.973665z m658.733544-135.021995a104.441518 104.441518 0 1 0-147.722083-147.722083 104.441518 104.441518 0 0 0 147.722083 147.722083zM459.542681 313.324555a20.888304 20.888304 0 0 1 20.867415-20.888304H710.202325a20.888304 20.888304 0 1 1 0 41.776608H480.430984A20.825639 20.825639 0 0 1 459.542681 313.324555z m0 104.441518c0-11.530344 9.295295-20.888304 20.742085-20.888303h334.505295c11.44679 0 20.742086 9.274407 20.742086 20.888303 0 11.530344-9.295295 20.888304-20.742086 20.888304H480.284766A20.762974 20.762974 0 0 1 459.542681 417.766073z m0 104.441519c0-11.530344 9.316183-20.888304 20.846527-20.888304h146.301679c11.509455 0 20.846527 9.274407 20.846527 20.888304 0 11.530344-9.316183 20.888304-20.846527 20.888303h-146.301679A20.80475 20.80475 0 0 1 459.542681 522.207592zM62.664911 396.87777a62.664911 62.664911 0 1 1 0-125.329822 62.664911 62.664911 0 0 1 0 125.329822z m0-31.332456a31.332456 31.332456 0 1 0 0-62.664911 31.332456 31.332456 0 0 0 0 62.664911zM1357.739739 271.547948a62.664911 62.664911 0 1 1 0-125.329822 62.664911 62.664911 0 0 1 0 125.329822z m0-31.332456a31.332456 31.332456 0 1 0 0-62.664911 31.332456 31.332456 0 0 0 0 62.664911z\"> </path> </svg><br> <span>\u6682\u65E0\u6570\u636E</span> </td> </tr> </tbody> </table> </div> </div> <!-- \u5B8C\u5168\u81EA\u5B9A\u4E49\u5217\u8868 --> <div class=\"flat-list-container\" *ngIf=\"flat\"> <div *ngFor=\"let row of list;let index=index;\"> <ng-container *ngTemplateOutlet=\"contentTemplates?.first;context: {$implicit:row,row:row,index:index};\"> </ng-container> </div> </div> <!-- \u5206\u9875 --> <div class=\"page-navigator\" *ngIf=\"totalSize\"> <div class=\"page-input\"> <span>{{'__6' | I18N}}</span> <input [(ngModel)]=\"inputPageIndex\" (keyup)=\"inputPageKeyUp($event)\"> <span>{{'__7' | I18N}}</span> </div> <div class=\"page-no\"> <span (click)=\"toPage(pageIndex-1)\"> <i class=\"fa fa-angle-left\"></i> </span> <span (click)=\"toPage(pageIndex-4)\" *ngIf=\"pageIndex-4>0\">{{pageIndex-4}}</span> <span (click)=\"toPage(pageIndex-3)\" *ngIf=\"pageIndex-3>0\">{{pageIndex-3}}</span> <span (click)=\"toPage(pageIndex-2)\" *ngIf=\"pageIndex-2>0\">{{pageIndex-2}}</span> <span (click)=\"toPage(pageIndex-1)\" *ngIf=\"pageIndex-1>0\">{{pageIndex-1}}</span> <span (click)=\"toPage(pageIndex)\" *ngIf=\"pageIndex>0\" class=\"active\">{{pageIndex}}</span> <span (click)=\"toPage(pageIndex+1)\" *ngIf=\"pageIndex+1<pageTotalIndex&&(pageIndex+1!=(pageToalIndex-3))\">{{pageIndex+1}}</span> <span (click)=\"toPage(pageIndex+2)\" *ngIf=\"pageIndex+2<pageTotalIndex&&(pageIndex+2!=(pageToalIndex-2))\">{{pageIndex+2}}</span> <span (click)=\"toPage(pageIndex+3)\" *ngIf=\"pageIndex+3<pageTotalIndex&&(pageIndex+3!=(pageToalIndex-1))\">\u00B7\u00B7\u00B7</span> <span (click)=\"toPage(pageTotalIndex)\" *ngIf=\"pageIndex!=pageTotalIndex\">{{pageTotalIndex}}</span> <span (click)=\"toPage(pageIndex+1)\"> <i class=\"fa fa-angle-right\"></i> </span> </div> <div class=\"loading\" *ngIf=\"loadingStatus\"> <!-- svgloading --> <svg width=\"30\" height=\"30\" viewBox=\"0 0 120 30\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#fff\"> <circle cx=\"15\" cy=\"15\" r=\"15\"> <animate attributeName=\"r\" from=\"15\" to=\"15\" begin=\"0s\" dur=\"0.8s\" values=\"15;9;15\" calcMode=\"linear\" repeatCount=\"indefinite\" /> <animate attributeName=\"fill-opacity\" from=\"1\" to=\"1\" begin=\"0s\" dur=\"0.8s\" values=\"1;.5;1\" calcMode=\"linear\" repeatCount=\"indefinite\" /> </circle> <circle cx=\"60\" cy=\"15\" r=\"9\" fill-opacity=\"0.3\"> <animate attributeName=\"r\" from=\"9\" to=\"9\" begin=\"0s\" dur=\"0.8s\" values=\"9;15;9\" calcMode=\"linear\" repeatCount=\"indefinite\" /> <animate attributeName=\"fill-opacity\" from=\"0.5\" to=\"0.5\" begin=\"0s\" dur=\"0.8s\" values=\".5;1;.5\" calcMode=\"linear\" repeatCount=\"indefinite\" /> </circle> <circle cx=\"105\" cy=\"15\" r=\"15\"> <animate attributeName=\"r\" from=\"15\" to=\"15\" begin=\"0s\" dur=\"0.8s\" values=\"15;9;15\" calcMode=\"linear\" repeatCount=\"indefinite\" /> <animate attributeName=\"fill-opacity\" from=\"1\" to=\"1\" begin=\"0s\" dur=\"0.8s\" values=\"1;.5;1\" calcMode=\"linear\" repeatCount=\"indefinite\" /> </circle> </svg> </div> </div> <ng-content></ng-content> <!-- \u9884\u5B9A\u4E49\u6A21\u677F --> <ng-template #datetime let-prop=\"prop\" let-value=\"value\"> <span>{{value|Datetime}}</span> </ng-template> <!-- treetable \u6A21\u677F --> <ng-template let-item #treetableTmp> <div class=\"node-deep\" [ngStyle]=\"treetableInstance.calcDeepStyle(item)\"> <span class=\"fa\" [class.fa-square-o]=\"!item.children?.length\" [class.fa-plus-square-o]=\"item.children?.length&&!item.$$expand\" [class.fa-minus-square-o]=\"item.children?.length&&item.$$expand\" (click)=\"item.$$expand?treetableInstance.compress(item):treetableInstance.expand(item)\"> </span> </div> </ng-template> ",
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef])
    ], ListComponent);
    return ListComponent;
}());
export { ListComponent };
//# sourceMappingURL=list.js.map