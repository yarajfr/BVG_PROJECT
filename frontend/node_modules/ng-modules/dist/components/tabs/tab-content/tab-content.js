var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, ViewContainerRef, TemplateRef, Renderer2, ElementRef, Input } from "@angular/core";
var TabContentDirective = (function () {
    function TabContentDirective(viewContainer, templateRef, renderer, elementRef) {
        this.viewContainer = viewContainer;
        this.templateRef = templateRef;
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.openStatus = false;
    }
    TabContentDirective.prototype.getRootElement = function () {
        var view = this.viewContainer.get(0);
        var element = view.rootNodes[0];
        return element;
    };
    TabContentDirective.prototype.onopen = function (isopen) { };
    TabContentDirective.prototype.open = function () {
        if (!this.openStatus) {
            if (!this.inited) {
                this.viewContainer.createEmbeddedView(this.templateRef);
            }
            else {
                var element = this.getRootElement();
                element && this.renderer.removeClass(element, "hide");
                this.viewContainer.get(0).reattach();
            }
            this.openStatus = true;
            this.onopen();
            this.inited = true;
        }
    };
    TabContentDirective.prototype.onclose = function () { };
    TabContentDirective.prototype.close = function () {
        if (this.openStatus) {
            if (this.inited) {
                var element = this.getRootElement();
                element && this.renderer.addClass(element, "hide");
                this.viewContainer.get(0).detach();
            }
            this.openStatus = false;
            this.onclose();
        }
    };
    __decorate([
        Input("tabContent"),
        __metadata("design:type", String)
    ], TabContentDirective.prototype, "name", void 0);
    TabContentDirective = __decorate([
        Directive({
            selector: "[tabContent]",
        }),
        __metadata("design:paramtypes", [ViewContainerRef,
            TemplateRef,
            Renderer2,
            ElementRef])
    ], TabContentDirective);
    return TabContentDirective;
}());
export { TabContentDirective };
//# sourceMappingURL=tab-content.js.map