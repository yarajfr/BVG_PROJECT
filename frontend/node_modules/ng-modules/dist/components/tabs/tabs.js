var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component } from "@angular/core";
import { ContentChildren } from "@angular/core";
import { TabContentDirective } from "./tab-content/tab-content";
import { TabSwitchDirective } from "./tab-switch/tab-switch";
var TabsComponent = (function () {
    function TabsComponent() {
    }
    Object.defineProperty(TabsComponent.prototype, "tabContents", {
        get: function () {
            return this._tabContents;
        },
        set: function (list) {
            var _this = this;
            this._tabContents = list;
            if (this._tabSwitchs) {
                setTimeout(function () { return _this.setInstance(); });
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(TabsComponent.prototype, "tabSwitchs", {
        get: function () {
            return this._tabSwitchs;
        },
        set: function (list) {
            var _this = this;
            this._tabSwitchs = list;
            if (this._tabContents) {
                setTimeout(function () { return _this.setInstance(); });
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    TabsComponent.prototype.closeAllContent = function () {
        var contents = this.tabContents.toArray();
        contents.map(function (content) {
            content.close();
        });
        var switchs = this.tabSwitchs.toArray();
        switchs.map(function (item) {
            item.checked = false;
            item.renderer.removeClass(item.elementRef.nativeElement, "active");
        });
    };
    TabsComponent.prototype.setInstance = function () {
        var _this = this;
        var contents = {};
        this.tabContents.toArray().map(function (item, index) {
            contents[item.name || index] = item;
        });
        var switchs = this.tabSwitchs.toArray();
        switchs.map(function (item, index) {
            item.beforeClick = function () {
                _this.closeAllContent();
            };
            item.content = contents[item.name] || contents[index];
            if (item.content) {
                item.content.onclose = function () {
                    item.leave.emit();
                };
                item.content.onopen = function (isFirst) {
                    item.enter.emit(isFirst);
                };
            }
        });
        this.findDefaultTab();
    };
    TabsComponent.prototype.findDefaultTab = function () {
        var switchs = this.tabSwitchs.toArray();
        if (!switchs.some(function (item) {
            if (item.checked) {
                item.onclick();
                return true;
            }
        })) {
            var switchItem = switchs[0];
            switchItem.onclick();
        }
    };
    TabsComponent.prototype.checkedIndex = function () {
        var switchs = this.tabSwitchs.toArray();
        var index = 0;
        switchs.some(function (item, i) {
            if (item.checked) {
                index = i;
                return true;
            }
        });
        return index;
    };
    TabsComponent.prototype.selectedByIndex = function (index) {
        var switchs = this.tabSwitchs.toArray();
        var switchItem = switchs[index];
        switchItem.onclick();
    };
    TabsComponent.prototype.ngOnInit = function () {
    };
    __decorate([
        ContentChildren(TabContentDirective),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], TabsComponent.prototype, "tabContents", null);
    __decorate([
        ContentChildren(TabSwitchDirective),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], TabsComponent.prototype, "tabSwitchs", null);
    TabsComponent = __decorate([
        Component({
            template: "<ng-content></ng-content> ",
            selector: "tabs",
        }),
        __metadata("design:paramtypes", [])
    ], TabsComponent);
    return TabsComponent;
}());
export { TabsComponent };
//# sourceMappingURL=tabs.js.map