var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, Input, Renderer2 } from "@angular/core";
import { Output } from "@angular/core";
import { ElementRef } from "@angular/core";
import { EventEmitter } from "@angular/core";
var TabSwitchDirective = (function () {
    function TabSwitchDirective(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.content = null;
        this.enter = new EventEmitter();
        this.leave = new EventEmitter();
        this._checked = false;
    }
    Object.defineProperty(TabSwitchDirective.prototype, "checked", {
        get: function () {
            return this._checked;
        },
        set: function (checked) {
            if (typeof checked == "string") {
                this._checked = true;
            }
            else if (checked) {
                this._checked = true;
            }
            else {
                this._checked = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    ;
    TabSwitchDirective.prototype.beforeClick = function () { };
    TabSwitchDirective.prototype.onclick = function () {
        if (!this.content.openStatus) {
            this.beforeClick();
            if (this.content) {
                this.content.open();
            }
            this.checked = true;
            this.renderer.addClass(this.elementRef.nativeElement, "active");
        }
    };
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], TabSwitchDirective.prototype, "enter", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], TabSwitchDirective.prototype, "leave", void 0);
    __decorate([
        Input("tabSwitch"),
        __metadata("design:type", String)
    ], TabSwitchDirective.prototype, "name", void 0);
    __decorate([
        Input("checked"),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], TabSwitchDirective.prototype, "checked", null);
    TabSwitchDirective = __decorate([
        Directive({
            selector: "[tabSwitch]",
            host: {
                "(click)": "onclick()",
            }
        }),
        __metadata("design:paramtypes", [ElementRef,
            Renderer2])
    ], TabSwitchDirective);
    return TabSwitchDirective;
}());
export { TabSwitchDirective };
//# sourceMappingURL=tab-switch.js.map