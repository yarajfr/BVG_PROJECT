var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ElementRef } from '@angular/core';
var FullscreenComponent = (function () {
    function FullscreenComponent(elementRef) {
        this.elementRef = elementRef;
        this.distance = 10;
        this.widthTimestamp = 0;
        this.heightTimestamp = 0;
    }
    FullscreenComponent.prototype.getRate = function () {
        var element = this.elementRef.nativeElement;
        var parentScroll = element.offsetParent.scrollTop || window.scrollY;
        var height = this.height;
        var offsetTop = element.offsetTop;
        var cut = offsetTop - parentScroll;
        return {
            rate: cut / height,
            cut: cut,
            height: height,
            offsetTop: offsetTop,
        };
    };
    FullscreenComponent.prototype.ngOnInit = function () {
        var _this = this;
        var element = this.elementRef.nativeElement;
        var timer;
        element.addEventListener("mousewheel", function () {
            timer && clearTimeout(timer);
            timer = setTimeout(function () {
                var rate = _this.getRate();
                if (rate.rate < 0.2 && rate.rate > 0) {
                }
            }, 200);
        }, {
            passive: true,
        });
    };
    Object.defineProperty(FullscreenComponent.prototype, "width", {
        get: function () {
            if ((+new Date) - this.widthTimestamp > this.distance) {
                this.widthTimestamp = (+new Date);
                return this._width = window.innerWidth;
            }
            else {
                return this._width;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FullscreenComponent.prototype, "height", {
        get: function () {
            if ((+new Date) - this.heightTimestamp > this.distance) {
                this.heightTimestamp = (+new Date);
                return this._height = window.innerHeight;
            }
            else {
                return this._height;
            }
        },
        enumerable: true,
        configurable: true
    });
    FullscreenComponent = __decorate([
        Component({
            selector: "fullscreen",
            template: "<div class=\"fullscreen\" [style.height.px]=\"height\"> <ng-content></ng-content> </div> ",
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], FullscreenComponent);
    return FullscreenComponent;
}());
export { FullscreenComponent };
//# sourceMappingURL=fullscreen.js.map