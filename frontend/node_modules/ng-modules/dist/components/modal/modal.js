var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ViewContainerRef, Directive, Input, ComponentFactoryResolver, ChangeDetectorRef, ReflectiveInjector } from '@angular/core';
import { ModalController } from '../../providers/modal/modalController';
import { DomProvider } from '../../providers/dom/dom';
import { AnimationProvider } from '../../providers/animation/animation';
var ModalComponent = (function () {
    function ModalComponent(cdr, domProvider, animation) {
        this.cdr = cdr;
        this.domProvider = domProvider;
        this.animation = animation;
        this.list = [];
    }
    ModalComponent_1 = ModalComponent;
    ModalComponent.prototype.ngOnInit = function () {
        ModalComponent_1.Instance = this;
    };
    ModalComponent.prototype.create = function (component, data, options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        try {
            options.width = options.width || 600;
            options.height = options.height || 400;
            var resolve_1, reject_1;
            var promise = new Promise(function (r, j) { resolve_1 = r; reject_1 = j; });
            var scrollFn_1 = function (e) {
                var direction;
                e.wheelDelta > 0 && (direction = 1);
                e.wheelDelta < 0 && (direction = -1);
                if (item_1.container) {
                    if (!_this.domProvider.checkIsParent(item_1.container, e.toElement)
                        || _this.domProvider.checkIsScrollToEnd(e.toElement, direction)) {
                        e.preventDefault();
                    }
                }
            };
            document.addEventListener("wheel", scrollFn_1, { passive: false });
            var item_1 = {
                animation: options.animation,
                animationState: options.animation || '' + ".init",
                title: options.title,
                backgroundClick: options.backgroundClick,
                transparent: options.transparent,
                options: options,
                content: component,
                promise: {
                    resolve: resolve_1,
                    reject: reject_1,
                },
                destroy: function () {
                    _this.list.some(function (ci, index) {
                        if (ci == item_1) {
                            if (item_1.component.instance.ngOnDestroy) {
                                var result = item_1.component.instance.ngOnDestroy();
                                if (result) {
                                    resolve_1();
                                }
                                else {
                                    reject_1();
                                }
                            }
                            else {
                                reject_1();
                            }
                            _this.list.splice(index, 1);
                            return true;
                        }
                    });
                    document.removeEventListener("wheel", scrollFn_1);
                    _this.cdr.detectChanges();
                },
                data: data,
            };
            this.list.push(item_1);
            this.cdr.detectChanges();
            if (options.timeout > 0) {
                setTimeout(function () {
                    item_1.promise.resolve();
                    item_1.destroy();
                }, options.timeout);
            }
            promise.destroy = function () {
                item_1.destroy();
            };
            return promise;
        }
        catch (e) {
            console.error(e);
        }
    };
    ModalComponent.prototype.createInstance = function (index, comp) {
        var item = this.list[index];
        item.component = comp;
        item.animationState = item.animation + ".on";
        var animation = item.animation;
        if (this.animation[animation]) {
            this.animation[animation](item.container);
        }
    };
    var ModalComponent_1;
    ModalComponent.Instance = null;
    ModalComponent = ModalComponent_1 = __decorate([
        Component({
            template: "<div *ngFor=\"let item of list;let index=index;\"> <div class=\"modal\" [class.transparent]=\"item.transparent\"> <div class=\"background-overlay\" [class]='\"background-overlay \"+(item.options?.overlayCss||\"\")' (click)=\"item.backgroundClick&&item.destroy()\"></div> <div class=\"container\" #container [class.hasHeader]=\"item.title\" [ngStyle]='{width:item.options?.width+\"px\",height:item.options?.height+\"px\"}'> <div class=\"header\" *ngIf=\"item.title\"> <h4 [innerHTML]=\"item.title\" [moveable]=\"container\" [class]='item.options?.headerCss||\"\"'></h4> <div class=\"modal-close\" (click)=\"item.destroy()\" [title]=\"'__4' | I18N\"> <span class=\"io-close\"></span> </div> </div> <ng-template [modal-contaner]=\"container\" [modal-item]=\"item\" [modal-content]=\"item.content\" [index]=\"index\" [modal-data]=\"item.data\"></ng-template> </div> </div> </div> <toast-view></toast-view> ",
            selector: "modal-view",
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef,
            DomProvider,
            AnimationProvider])
    ], ModalComponent);
    return ModalComponent;
}());
export { ModalComponent };
var ModalContentComponent = (function () {
    function ModalContentComponent(view, componentFactoryResolver) {
        this.view = view;
        this.componentFactoryResolver = componentFactoryResolver;
    }
    ModalContentComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.modalItem.container = this.container;
        if (this.modalContent) {
            try {
                var component = this.modalContent.component || this.modalContent;
                var resolver = this.modalContent.resolver || this.componentFactoryResolver;
                var factory = resolver.resolveComponentFactory(component);
                var modalParams = new ModalController(this.data);
                modalParams.sendMessage = function (data) {
                    _this.modalItem.promise.resolve(data);
                };
                modalParams.sendError = function (data) {
                    _this.modalItem.promise.reject(data);
                };
                modalParams.close = function () {
                    _this.modalItem.destroy();
                };
                var injector = ReflectiveInjector.resolveAndCreate([
                    {
                        provide: component,
                        useValue: component,
                    },
                    {
                        provide: ModalController,
                        useValue: modalParams,
                    }
                ], this.modalContent.injector);
                var comp = this.view.createComponent(factory, 0, injector);
                ModalComponent.Instance.createInstance(this.index, comp);
            }
            catch (e) {
                console.error(e);
            }
        }
    };
    __decorate([
        Input("modal-contaner"),
        __metadata("design:type", Object)
    ], ModalContentComponent.prototype, "container", void 0);
    __decorate([
        Input("modal-item"),
        __metadata("design:type", Object)
    ], ModalContentComponent.prototype, "modalItem", void 0);
    __decorate([
        Input("modal-content"),
        __metadata("design:type", Object)
    ], ModalContentComponent.prototype, "modalContent", void 0);
    __decorate([
        Input("modal-data"),
        __metadata("design:type", Object)
    ], ModalContentComponent.prototype, "data", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ModalContentComponent.prototype, "index", void 0);
    ModalContentComponent = __decorate([
        Directive({
            selector: "[modal-content]",
        }),
        __metadata("design:paramtypes", [ViewContainerRef,
            ComponentFactoryResolver])
    ], ModalContentComponent);
    return ModalContentComponent;
}());
export { ModalContentComponent };
//# sourceMappingURL=modal.js.map