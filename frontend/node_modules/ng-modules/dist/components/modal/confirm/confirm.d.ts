import { TemplateRef } from "@angular/core";
import { ModalController } from "../../../providers/modal/modalController";
import { ModalOptions } from "../modal";
import { FormBuilder } from "@angular/forms";
import { I18nProvider } from "../../../providers/i18n/i18n";
export interface ConfirmOptions extends ModalOptions {
    title?: string;
    image?: string;
    content?: string;
    hideOk?: boolean;
    okText?: string;
    beforeOk?: (data: any) => boolean | Promise<boolean>;
    hideCancel?: boolean;
    cancelText?: string;
    beforeCancel?: (data: any) => boolean | Promise<boolean>;
    buttons?: ConfirmButton[];
    inputs?: ConfirmInput[];
    buttonsCss?: string;
    contentTpl?: TemplateRef<any>;
}
export interface ConfirmButton {
    text: string;
    cssClass?: string;
    canClose?: (data: any) => boolean | Promise<boolean>;
}
export interface ConfirmInput {
    name: string;
    type?: string;
    placeholder?: string;
    value?: string;
    label?: string;
    options?: {
        value: any;
        name: string;
    }[];
}
export declare class ConfirmComponent {
    private modalController;
    private formBuilder;
    private i18n;
    data: any;
    form: any;
    constructor(modalController: ModalController, formBuilder: FormBuilder, i18n: I18nProvider);
    content: string;
    buttons: ConfirmButton[];
    inputs: ConfirmInput[];
    buttonsCss: string;
    contentTpl: TemplateRef<any>;
    clicking: boolean;
    buttonClick(btn: (ConfirmButton & {
        type?: "ok" | "cancel";
    })): Promise<void>;
    ngOnInit(): void;
    deal(options: ConfirmOptions): void;
    ngOnDestroy(): void;
}
