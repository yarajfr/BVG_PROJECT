var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ElementRef, HostListener, Renderer2 } from "@angular/core";
import { NG_VALUE_ACCESSOR } from "@angular/forms";
var SelectorComponent = (function () {
    function SelectorComponent(element, renderer2) {
        this.element = element;
        this.renderer2 = renderer2;
    }
    SelectorComponent_1 = SelectorComponent;
    SelectorComponent.prototype.writeValue = function (obj) {
        throw new Error("Method not implemented.");
    };
    SelectorComponent.prototype.registerOnChange = function (fn) {
        throw new Error("Method not implemented.");
    };
    SelectorComponent.prototype.registerOnTouched = function (fn) {
        throw new Error("Method not implemented.");
    };
    SelectorComponent.prototype.setDisabledState = function (isDisabled) {
        throw new Error("Method not implemented.");
    };
    SelectorComponent.prototype.ngOnInit = function () {
        this.parentElement = this.element.nativeElement.parentElement;
    };
    SelectorComponent.prototype.focus = function () {
        this.renderer2.addClass(this.element.nativeElement, "focus");
        this.renderer2.addClass(this.parentElement, "focus");
    };
    SelectorComponent.prototype.blur = function () {
        this.renderer2.removeClass(this.element.nativeElement, "focus");
        this.renderer2.removeClass(this.parentElement, "focus");
    };
    var SelectorComponent_1;
    __decorate([
        HostListener("focus", ["$event"]),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], SelectorComponent.prototype, "focus", null);
    __decorate([
        HostListener("blur", ["$event"]),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], SelectorComponent.prototype, "blur", null);
    SelectorComponent = SelectorComponent_1 = __decorate([
        Component({
            selector: "selector",
            providers: [
                { provide: NG_VALUE_ACCESSOR, useClass: SelectorComponent_1 }
            ],
            template: "",
        }),
        __metadata("design:paramtypes", [ElementRef,
            Renderer2])
    ], SelectorComponent);
    return SelectorComponent;
}());
export { SelectorComponent };
//# sourceMappingURL=selector.js.map