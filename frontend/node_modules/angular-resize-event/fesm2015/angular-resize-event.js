import { EventEmitter, Directive, ElementRef, Output, NgModule } from '@angular/core';
import { ResizeSensor } from 'css-element-queries';

class ResizedEvent {
    constructor(element, newWidth, newHeight, oldWidth, oldHeight) {
        this.element = element;
        this.newWidth = newWidth;
        this.newHeight = newHeight;
        this.oldWidth = oldWidth;
        this.oldHeight = oldHeight;
    }
}

class ResizedDirective {
    constructor(element) {
        this.element = element;
        this.resized = new EventEmitter();
    }
    ngOnInit() {
        // only initialize resize watching if sensor is availablei
        if (ResizeSensor) {
            this.resizeSensor = new ResizeSensor(this.element.nativeElement, () => this.onResized());
        }
    }
    ngOnDestroy() {
        if (this.resizeSensor) {
            this.resizeSensor.detach();
        }
    }
    onResized() {
        const newWidth = this.element.nativeElement.clientWidth;
        const newHeight = this.element.nativeElement.clientHeight;
        if (newWidth === this.oldWidth && newHeight === this.oldHeight) {
            return;
        }
        const event = new ResizedEvent(this.element, newWidth, newHeight, this.oldWidth, this.oldHeight);
        this.oldWidth = this.element.nativeElement.clientWidth;
        this.oldHeight = this.element.nativeElement.clientHeight;
        this.resized.emit(event);
    }
}
ResizedDirective.decorators = [
    { type: Directive, args: [{
                // tslint:disable-next-line:directive-selector
                selector: '[resized]'
            },] }
];
ResizedDirective.ctorParameters = () => [
    { type: ElementRef }
];
ResizedDirective.propDecorators = {
    resized: [{ type: Output }]
};

class AngularResizedEventModule {
}
AngularResizedEventModule.decorators = [
    { type: NgModule, args: [{
                declarations: [ResizedDirective],
                imports: [],
                exports: [ResizedDirective]
            },] }
];

/*
 * Public API Surface of angular-resize-event
 */

/**
 * Generated bundle index. Do not edit.
 */

export { AngularResizedEventModule, ResizedDirective, ResizedEvent };
//# sourceMappingURL=angular-resize-event.js.map
